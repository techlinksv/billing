"use client";
import {
  require_warning
} from "./chunk-WX5R72UT.js";
import {
  Feedback_default
} from "./chunk-WTM5275A.js";
import "./chunk-JUCC7LW7.js";
import {
  FormContext_default
} from "./chunk-CL4BCO5S.js";
import {
  require_classnames,
  useBootstrapPrefix
} from "./chunk-DOYFDUYL.js";
import {
  require_jsx_runtime
} from "./chunk-GHJG7XTE.js";
import {
  require_react
} from "./chunk-ZOIWZPCO.js";
import {
  __toESM
} from "./chunk-DFKQJ226.js";

// node_modules/react-bootstrap/esm/FormControl.js
var import_classnames = __toESM(require_classnames());
var React = __toESM(require_react());
var import_react = __toESM(require_react());
var import_warning = __toESM(require_warning());
var import_jsx_runtime = __toESM(require_jsx_runtime());
var FormControl = React.forwardRef(({
  bsPrefix,
  type,
  size,
  htmlSize,
  id,
  className,
  isValid = false,
  isInvalid = false,
  plaintext,
  readOnly,
  // Need to define the default "as" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595
  as: Component = "input",
  ...props
}, ref) => {
  const {
    controlId
  } = (0, import_react.useContext)(FormContext_default);
  bsPrefix = useBootstrapPrefix(bsPrefix, "form-control");
  true ? (0, import_warning.default)(controlId == null || !id, "`controlId` is ignored on `<FormControl>` when `id` is specified.") : void 0;
  return (0, import_jsx_runtime.jsx)(Component, {
    ...props,
    type,
    size: htmlSize,
    ref,
    readOnly,
    id: id || controlId,
    className: (0, import_classnames.default)(className, plaintext ? `${bsPrefix}-plaintext` : bsPrefix, size && `${bsPrefix}-${size}`, type === "color" && `${bsPrefix}-color`, isValid && "is-valid", isInvalid && "is-invalid")
  });
});
FormControl.displayName = "FormControl";
var FormControl_default = Object.assign(FormControl, {
  Feedback: Feedback_default
});
export {
  FormControl_default as default
};
//# sourceMappingURL=react-bootstrap_FormControl.js.map
