{
  "version": 3,
  "sources": ["../../lodash/_baseToNumber.js", "../../lodash/_createMathOperation.js"],
  "sourcesContent": ["var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/**\n * The base implementation of `_.toNumber` which doesn't ensure correct\n * conversions of binary, hexadecimal, or octal string values.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n */\nfunction baseToNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  return +value;\n}\n\nmodule.exports = baseToNumber;\n", "var baseToNumber = require('./_baseToNumber'),\n    baseToString = require('./_baseToString');\n\n/**\n * Creates a function that performs a mathematical operation on two values.\n *\n * @private\n * @param {Function} operator The function to perform the operation.\n * @param {number} [defaultValue] The value used for `undefined` arguments.\n * @returns {Function} Returns the new mathematical operation function.\n */\nfunction createMathOperation(operator, defaultValue) {\n  return function(value, other) {\n    var result;\n    if (value === undefined && other === undefined) {\n      return defaultValue;\n    }\n    if (value !== undefined) {\n      result = value;\n    }\n    if (other !== undefined) {\n      if (result === undefined) {\n        return other;\n      }\n      if (typeof value == 'string' || typeof other == 'string') {\n        value = baseToString(value);\n        other = baseToString(other);\n      } else {\n        value = baseToNumber(value);\n        other = baseToNumber(other);\n      }\n      result = operator(value, other);\n    }\n    return result;\n  };\n}\n\nmodule.exports = createMathOperation;\n"],
  "mappings": ";;;;;;;;;AAAA;AAAA;AAAA,QAAI,WAAW;AAGf,QAAI,MAAM,IAAI;AAUd,aAAS,aAAa,OAAO;AAC3B,UAAI,OAAO,SAAS,UAAU;AAC5B,eAAO;AAAA,MACT;AACA,UAAI,SAAS,KAAK,GAAG;AACnB,eAAO;AAAA,MACT;AACA,aAAO,CAAC;AAAA,IACV;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACvBjB;AAAA;AAAA,QAAI,eAAe;AAAnB,QACI,eAAe;AAUnB,aAAS,oBAAoB,UAAU,cAAc;AACnD,aAAO,SAAS,OAAO,OAAO;AAC5B,YAAI;AACJ,YAAI,UAAU,UAAa,UAAU,QAAW;AAC9C,iBAAO;AAAA,QACT;AACA,YAAI,UAAU,QAAW;AACvB,mBAAS;AAAA,QACX;AACA,YAAI,UAAU,QAAW;AACvB,cAAI,WAAW,QAAW;AACxB,mBAAO;AAAA,UACT;AACA,cAAI,OAAO,SAAS,YAAY,OAAO,SAAS,UAAU;AACxD,oBAAQ,aAAa,KAAK;AAC1B,oBAAQ,aAAa,KAAK;AAAA,UAC5B,OAAO;AACL,oBAAQ,aAAa,KAAK;AAC1B,oBAAQ,aAAa,KAAK;AAAA,UAC5B;AACA,mBAAS,SAAS,OAAO,KAAK;AAAA,QAChC;AACA,eAAO;AAAA,MACT;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;",
  "names": []
}
