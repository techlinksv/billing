import {
  require_isRegExp
} from "./chunk-7VBQVSWM.js";
import {
  require_castSlice,
  require_hasUnicode,
  require_stringToArray
} from "./chunk-KA5BE2BX.js";
import "./chunk-3XFAO7V7.js";
import {
  require_baseToString,
  require_convert,
  require_eq,
  require_isArrayLike,
  require_isIndex,
  require_isObject,
  require_placeholder,
  require_toString
} from "./chunk-KWXHC2UF.js";
import {
  __commonJS
} from "./chunk-DFKQJ226.js";

// node_modules/lodash/_isIterateeCall.js
var require_isIterateeCall = __commonJS({
  "node_modules/lodash/_isIterateeCall.js"(exports, module) {
    var eq = require_eq();
    var isArrayLike = require_isArrayLike();
    var isIndex = require_isIndex();
    var isObject = require_isObject();
    function isIterateeCall(value, index, object) {
      if (!isObject(object)) {
        return false;
      }
      var type = typeof index;
      if (type == "number" ? isArrayLike(object) && isIndex(index, object.length) : type == "string" && index in object) {
        return eq(object[index], value);
      }
      return false;
    }
    module.exports = isIterateeCall;
  }
});

// node_modules/lodash/split.js
var require_split = __commonJS({
  "node_modules/lodash/split.js"(exports, module) {
    var baseToString = require_baseToString();
    var castSlice = require_castSlice();
    var hasUnicode = require_hasUnicode();
    var isIterateeCall = require_isIterateeCall();
    var isRegExp = require_isRegExp();
    var stringToArray = require_stringToArray();
    var toString = require_toString();
    var MAX_ARRAY_LENGTH = 4294967295;
    function split(string, separator, limit) {
      if (limit && typeof limit != "number" && isIterateeCall(string, separator, limit)) {
        separator = limit = void 0;
      }
      limit = limit === void 0 ? MAX_ARRAY_LENGTH : limit >>> 0;
      if (!limit) {
        return [];
      }
      string = toString(string);
      if (string && (typeof separator == "string" || separator != null && !isRegExp(separator))) {
        separator = baseToString(separator);
        if (!separator && hasUnicode(string)) {
          return castSlice(stringToArray(string), 0, limit);
        }
      }
      return string.split(separator, limit);
    }
    module.exports = split;
  }
});

// node_modules/lodash/fp/split.js
var require_split2 = __commonJS({
  "node_modules/lodash/fp/split.js"(exports, module) {
    var convert = require_convert();
    var func = convert("split", require_split());
    func.placeholder = require_placeholder();
    module.exports = func;
  }
});
export default require_split2();
//# sourceMappingURL=lodash_fp_split.js.map
