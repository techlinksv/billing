{
  "version": 3,
  "sources": ["../../lodash/sumBy.js", "../../lodash/fp/sumBy.js"],
  "sourcesContent": ["var baseIteratee = require('./_baseIteratee'),\n    baseSum = require('./_baseSum');\n\n/**\n * This method is like `_.sum` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the value to be summed.\n * The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {number} Returns the sum.\n * @example\n *\n * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n *\n * _.sumBy(objects, function(o) { return o.n; });\n * // => 20\n *\n * // The `_.property` iteratee shorthand.\n * _.sumBy(objects, 'n');\n * // => 20\n */\nfunction sumBy(array, iteratee) {\n  return (array && array.length)\n    ? baseSum(array, baseIteratee(iteratee, 2))\n    : 0;\n}\n\nmodule.exports = sumBy;\n", "var convert = require('./convert'),\n    func = convert('sumBy', require('../sumBy'));\n\nfunc.placeholder = require('./placeholder');\nmodule.exports = func;\n"],
  "mappings": ";;;;;;;;;;;;;AAAA;AAAA;AAAA,QAAI,eAAe;AAAnB,QACI,UAAU;AAyBd,aAAS,MAAM,OAAO,UAAU;AAC9B,aAAQ,SAAS,MAAM,SACnB,QAAQ,OAAO,aAAa,UAAU,CAAC,CAAC,IACxC;AAAA,IACN;AAEA,WAAO,UAAU;AAAA;AAAA;;;AChCjB,IAAAA,iBAAA;AAAA;AAAA,QAAI,UAAU;AAAd,QACI,OAAO,QAAQ,SAAS,eAAmB;AAE/C,SAAK,cAAc;AACnB,WAAO,UAAU;AAAA;AAAA;",
  "names": ["require_sumBy"]
}
